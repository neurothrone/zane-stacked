@using ZaneStacked.Shared.DTOs
@using ZaneStacked.Web.Services

<div class="card @CssClass">
    <div class="card-header d-flex align-items-center custom-header">
        <h5 class="pt-2">Random Excuse</h5>
    </div>
    <div class="card-body">
        @if (_randomExcuse is null)
        {
            <div class="loading-pulse"></div>
        }
        else
        {
            <p class="card-text custom-text">@_randomExcuse.Text</p>
        }
    </div>
</div>

@code {

    [Parameter]
    public string CssClass { get; set; } = string.Empty;

    [Inject]
    private ExcuseService ExcuseService { get; set; } = null!;

    private ExcuseDto? _randomExcuse;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(TimeSpan.FromSeconds(2));
        _randomExcuse = await ExcuseService.GetRandomExcuseAsync();
    }

}