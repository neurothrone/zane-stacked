@using ZaneStacked.Shared.DTOs
@using ZaneStacked.Web.Services

<div class="card project-card h-100">
    <ImageWithFallback
        CssClass="card-img-top"
        Source="@($"{StorageService.BaseUrl}/{Project.FeaturedImage}")"
        AltText="@Project.Name"
    />

    <div class="card-body d-flex flex-column">
        <h4 class="card-title">@Project.Name</h4>

        <p class="card-text flex-grow-1">@Project.Description</p>
        <div>
            @foreach (var skill in Project.Skills)
            {
                <SkillBadge Name="@skill.Name" CssClass="me-2"/>
            }
        </div>

        <div class="mt-3">
            <PrimaryButton Href="@Project.GitHubUrl" Icon="bi-github" Text="GitHub"/>
            @if (!string.IsNullOrEmpty(Project.DemoUrl))
            {
                <PrimaryButton Href="@Project.DemoUrl" Icon="bi-play-circle" Text="Demo" CssClass="ms-2"/>
            }
        </div>
    </div>
</div>

@code {

    [Parameter, EditorRequired]
    public required ProjectDto Project { get; set; }

    [Inject]
    private StorageService StorageService { get; set; } = null!;

}