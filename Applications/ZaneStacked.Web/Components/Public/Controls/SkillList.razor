@using ZaneStacked.Shared.DTOs
@using ZaneStacked.Web.Services

<section class="@CssClass">
    <SectionHeader Title="Skills" CssClass="text-center"/>
    <div class="row justify-content-center">
        @if (_skills is null)
        {
            <LoadingIndicator/>
        }
        else
        {
            <div class="row row-cols-2 row-cols-md-4 g-4">
                @foreach (var skill in _skills)
                {
                    <div class="col">
                        <SkillCard Skill="skill"/>
                    </div>
                }
            </div>
        }
    </div>
</section>

@code {

    [Parameter]
    public string CssClass { get; set; } = string.Empty;

    [Inject]
    private SkillService SkillService { get; set; } = null!;

    private List<SkillDto>? _skills;

    protected override async Task OnInitializedAsync()
    {
        _skills = (await SkillService.GetSkillsAsync())
            .OrderByDescending(s => s.YearsOfExperience)
            .ToList();
    }

}